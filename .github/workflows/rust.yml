##################################################
# Name: rust.yml
# Description: Workflow for Rust projects
##################################################

name: Rust

on:

  push:
    branches:
      - master

  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - review_requested

env:

  # Enable cargo terminal colours
  CARGO_TERM_COLOR: always

defaults:

  run:
    shell: bash

jobs:

  #########################
  # Run the target agnostic linting checks in a separate job
  #########################

  cargo_lint:

    name: Cargo lint

    runs-on: ${{ matrix.config.os }}

    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable

    steps:

      - id: setup_rust
        name: Setup the Rust environment
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.config.target }}
          toolchain: ${{ matrix.config.toolchain }}
          default: true

      - id: setup_rust_linux_alsa
        name: Setup the Rust environment with ALSA dependency
        if: matrix.config.os == 'ubuntu-latest'
        run: >
          sudo apt install -y
          libasound2-dev

      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          persist-credentials: true

      - id: cache_artifacts_cargo_registry
        name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.config.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.target }}-cargo-registry-

      - id: cache_artifacts_cargo_index
        name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.config.target }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.target }}-cargo-index-

      - id: cache_artifacts_cargo_target
        name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target/release
          key: ${{ matrix.config.target }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.target }}-target-

      - id: cargo_fmt_add
        name: Add Cargo format
        run: >
          rustup component add
          --toolchain ${{ matrix.config.toolchain }}
          rustfmt
          &&
          rustup component list

      - id: cargo_fmt_run
        name: Run Cargo format
        run: >
          cargo fmt --version
          &&
          cargo fmt --all --
          --check

      - id: cargo_clippy_add
        name: Add Cargo clippy
        run: >
          rustup component add
          --toolchain ${{ matrix.config.toolchain }}
          clippy
          &&
          rustup component list

      - id: cargo_clippy_run
        name: Run Cargo clippy
        run: >
          cargo clippy --version
          &&
          cargo clippy --all --all-features --
          -D warnings

  #########################
  # Run the tests for each target individually
  #########################

  cargo_test:

    name: Cargo Test for ${{ matrix.config.target }}

    runs-on: ${{ matrix.config.os }}

    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            toolchain: stable
          # TODO: ARM64 support
          #- os: ubuntu-latest
          #  target: aarch64-unknown-linux-gnu
          #  toolchain: stable
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: stable
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: stable
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            toolchain: stable

    steps:

      - id: setup_rust
        name: Setup the Rust environment
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.config.target }}
          toolchain: ${{ matrix.config.toolchain }}
          default: true

      - id: setup_rust_linux_alsa
        name: Setup the Rust environment with ALSA dependency
        if: matrix.config.os == 'ubuntu-latest'
        run: >
          sudo apt install -y
          libasound2-dev

      - id: setup_rust_linux_musl
        name: Setup the Rust environment for Linux musl
        if: matrix.config.target == 'x86_64-unknown-linux-musl' && matrix.config.os == 'ubuntu-latest'
        run: >
          sudo apt install -y
          musl-tools

      - id: setup_rust_arm64
        name: Setup the Rust environment for ARM64
        if: matrix.config.target == 'aarch64-unknown-linux-gnu' && matrix.config.os == 'ubuntu-latest'
        run: >
          sudo apt install -y
          gcc-aarch64-linux-gnu

      - id: checkout_repository
        name: Checkout repository
        uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          persist-credentials: true

      - id: cache_artifacts_cargo_registry
        name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.config.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.target }}-cargo-registry-

      - id: cache_artifacts_cargo_index
        name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.config.target }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.target }}-cargo-index-

      - id: cache_artifacts_cargo_target
        name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target/release
          key: ${{ matrix.config.target }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.target }}-target-

      - id: cargo_check
        name: Run Cargo check
        env:
          PKG_CONFIG_ALLOW_CROSS: "1"
        run: >
          cargo --version
          &&
          cargo check
          --verbose
          --target ${{ matrix.config.target }}

      - id: cargo_test
        name: Run Cargo tests
        run: >
          cargo --version
          &&
          cargo test
          --verbose
          --target ${{ matrix.config.target }}
